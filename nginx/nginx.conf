events {
    worker_connections 1024;
}

http {

    upstream image-processor-requests-server {
        server image-processor-requests-server:8080;
    }

    upstream image-region-processor-server {
        server image-region-processor-server:8081;
    }

    upstream auth-service {
        server auth:9100;
    }

    upstream zuul-proxy {
        server zuul:7080;
    }

    upstream eureka-service {
        server eureka:8761;
    }

    upstream frontend {
        server management-portal:5000;
    }

    upstream grafana-dashboard {
        server grafana:9091;
    }

    upstream prometheus-server {
        server prometheus:9090;
    }

    include /etc/nginx/mime.types;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_types text/plain application/xml application/json;
    
    server_names_hash_bucket_size  256;
    client_max_body_size 30M;

    #server {
    #    listen 80;
    #    listen 443 ssl;

     server {
         listen 7080 default_server;
         listen [::]:7080 default_server;
         server_name 54.153.23.243;
        
         port_in_redirect off;

         return 301 https://$server_name$request_uri;
         #rewrite ^(.*) https://$server_name$1 permanent;
     }

    server {

        listen 7443 ssl http2 default_server;
        listen [::]:7443 ssl http2 default_server;

        include snippets/self-signed.conf;
        include snippets/ssl-params.conf;

        port_in_redirect off;

        location ~ ^/api/v1/(.+)$ {
            proxy_pass http://zuul-proxy/$1$is_args$args;
        }

        #location ~ ^/api/v1/imageProcessor/(.+)$ {
        #    proxy_pass http://image-region-processor-server/imageProcessor/$1$is_args$args;
        #}
        
        #location ~ ^/api/v1/(.+)$ {
        #    proxy_pass http://image-processor-requests-server/$1$is_args$args;
        #}

        location ~ ^/actuator/(.+)$ {
            #auth_basic "Authentication required";
            #auth_basic_user_file /etc/apache2/.htpasswd;

            proxy_pass http://api/actuator/$1$is_args$args;
        }
        
        location /metrics/ {
            proxy_pass http://grafana-dashboard;
    
            rewrite  ^/metrics/(.*)  /$1 break;
            proxy_set_header   Host $host;
            proxy_set_header Authorization "";
        }

        location ~ ^/prometheus/(.+)$ {
            proxy_pass http://prometheus-server/$1$is_args$args;
        }

        location / {
            #auth_basic "Authentication required";
            #auth_basic_user_file /etc/apache2/.htpasswd;

            proxy_pass http://frontend;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}
